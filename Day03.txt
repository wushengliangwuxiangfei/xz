一.背景
  1.背景图尺寸
    属性：background-size
    取值：
       1.width height
       2.width% height%
       3.cover 将背景图等比缩放，直到背景图完全覆盖到元素的区域为止
       4.contain 将背景图等比的放大，直到背景图碰到元素某一个边缘为止。
  2.背景图固定
    作用：将背景图固定在网页的某个位置，一直在可视的区域中，不会随着滚动条发生变化。
    属性：background-attachment
    取值：
       1.scroll 默认值，滚动
       2.fixed  固定
  3.背景图定位
    作用：改变背景图的位置
    属性：background-position
    取值：
       1.x y
         x:背景图在水平方向偏移距离
	   取值为正，往右移动
	   取值为负，往左移动
         y:背景图在垂直方向偏移距离
	   取值为正，往下移动
	   取值为负，往上移动
       2.x% y%
         0% 0%  左上角
	 100% 100% 右下角
	 50% 50%  正中间
       3.关键词
         x:left/center/right
	 y:top/center/bottom
        ex:
	 background-position:right top; 靠右上角
  4.背景的简写方式
    在一个属性中指定背景的多个属性值。
    属性：background
    取值：color url() repeat attachment position;
    ex：
      background:red;
      background:url(a.jpg) no-repeat center center;
二.渐变
  1.什么是渐变
    渐变指的是多种颜色平缓变化的一种显示效果。
  2.渐变的主要因素
    色标：一种颜色及其出现的位置
    一个渐变至少有两个色标
  3.渐变分类
    1.线性渐变
      以直线的方向来填充渐变色
    2.径向渐变
      以圆形的方式实现渐变色
    3.重复渐变
      将线性渐变 或 径向渐变 重复几次实现渐变
  4.线性渐变
    属性：background-image
    取值：linear-gradient(angle,color-point1,color-point2)
    angle: 表示渐变的方向或角度
          取值：
	     1.关键词
	       to top 从下到上渐变
	       to bottom 从上到下渐变
	       to left 从右到左
	       to right 从左到右
             2.角度值
	       0deg 等同于to top
	       90deg 等同于to right
	       180deg 等同于to bottom
	       270deg 等同于to left
	       45deg
    color-point:表示色标，指定颜色及其位置
                取值：颜色 位置；
		ex:red 0px,blue 50%,green 200px;
  5.径向渐变
    1.语法
      background-image:radial-gradient(size at position,color-point1,color-point2);
      size:半径，以px为单位的数字
      position:圆心所在的位置
               取值：x y 具体数字
	             x% y% 元素高和宽的占比
		     关键词：x:left/center/right
		             y:top/center/bottom
  6.重复渐变
    1.重复线性渐变
      background-image:repeating-linear-gradient(angle,color-point1,...);
    2.重复径向渐变
      background-image:repeating-radial-gradient(size at position,color-point1,...);
      注意：在重复渐变中，位置一定要给绝对值（px）,不要给相对单位%
  7.浏览器的兼容性
    各个浏览器新版本都支持渐变属性。
    对于不支持的浏览器版本，可以通过添加浏览器前缀的方式，让浏览器支持。
    Chrome&Safari:-webkit-
    Firefox:-moz-
    IE:-ms-
    opera:-o-
    ex：
    background:-webkit-linear-gradient(angle,color-point1,...);
    
    查看浏览器支持版本：https://www.caniuse.com
三.文本格式化（重点）
  1.字体属性
    1.指定字体类型
      属性：font-family
      取值：用逗号隔开多个字体类型
      ex:
       font-family:"微软雅黑",Arial,"黑体";
    2.字体大小
      属性：font-size
      取值：以px或pt为单位的数字
    3.字体加粗
      属性：font-weight
      取值：
          1.bold 加粗（b,hn标记）
	  2.normal 正常
	  3.value 无单位的整百倍数字 400-900
    4.字体样式
      属性：font-style
      取值：
          1.italic 斜体（i标记）
	  2.normal 正常
    5.小型大写字母
      属性：font-variant
      取值：
         1.normal 正常
	 2.small-caps 小型大写字母
    6.字体属性简写方式
      属性：font
      取值：style variant weight size family;
      注意：使用简写方式时，必须要设置family的值，否则无效。
      练习：
        创建一个网页，定义一个div标记，内容随意，最好中英文结合，设置以下样式：
	  1.字体为“微软雅黑”
	  2.文字大小为32px
	  3.加粗并呈斜体显示
	  4.将所有小写字符变为小型大写字符。
  2.文本格式化
    1.文本颜色
      属性：color
      取值：合法的颜色值
    2.文本排列（水平方向）
      作用：指定文本在水平方向的对齐方式（行内，行内块）
      属性：text-align
      取值：left/center/right/justify(两端对齐)
    3.行高
      作用：定义一行数据的高度，如果行高的高度大于字体本身的大小时，那么该行文本将在指定的行高内呈现垂直居中的效果。
      属性：line-height
      取值：以px为单位的数字。
            无单位的数字 ，就是字体的倍数。
	    ex:
	    line-height:2; 行高的高度是字体大小的2倍
    4.线条修饰
      属性：text-decoration
      取值：
          1.overline 上划线
	  2.underline 下划线
	  3.line-through 删除线
	  4.none 无线条修饰
    5.首行缩进
      属性：text-indent
      取值：以px为单位的数字
    6.文本阴影
      属性：text-shadow
      取值：h-shadow v-shadow blur color;
      
      练习：
         在上面练习的基础增加以下设置：
	    1.文本的排列方式为两端对齐
	    2.文字的修饰为下划线修饰
	    3.行高的高度是字体大小的1.5倍
	    4.首行缩进24px
四.表格
   1.表格的常用属性
     1.边距属性：padding(margin无效)
     2.边框属性：border
     3.尺寸属性：width,height
     4.文本格式属性：font-*,text-*,line-height
     5.背景属性：颜色，图片，渐变
     6.vertical-align 
       作用：指定单元格数据的垂直对齐方式
       取值：top/middle/bottom
     练习：
       创建一个4*4表格，表格高宽各400px,内容随意
         1.设置每个单元格的尺寸为100*100px
	 2.设置表格和单元格的边框1px solid #000
	 3.尝试着给每个td设置上外边距20px
   2.表格的特有属性
     1.边框合并
       属性：border-collapse
       取值：
          1.separate 默认值，即边框分离模式
	  2.collapse 边框合并
     2.边框边距
       作用：设置单元格之间与单元格之间的间距
       属性：border-spacing
       取值：
           1.给一个值：水平和垂直的间距相同
	   2.给两个值：第一个值表示水平方向，第二个值表示垂直方向
       注意：如果要设置边框边距，border-collapse的值必须是separate。
     3.标题位置
       属性：caption-side
       取值：
          1.top 默认值，标题位于表格的上方
	  2.bottom 标题位于表格的下方
     4.显示规则
       作用：用来帮助浏览器如何布局一张表格，也就是指定td尺寸的计算方式。
       属性：table-layout
       取值：
          1.auto 默认值，即自动布局表格，列的尺寸实际上由内容决定。
	  2.fixed 固定表格的布局，列的尺寸由设定的为准。
       自动布局VS固定布局：
          1.自动布局
	    1.单元格的大小会适应内容
	    2.表格复杂时，加载速度较慢（缺点）
	    3.自动布局会比较灵活（优点）
	    4.适用于不确定每列的大小并且表格不复杂时使用
          2.固定布局
	    1.单元格的尺寸取决于设定的值
	    2.任何情况下回加速加载表格（优点）
	    3.固定表格布局不够灵活（缺点）
	    4.适用于确定每列尺寸时使用
五.定位（重点）
   定位：指的是改变元素在页面中的位置。
   定位分类：
      1.普通流定位
      2.浮动定位
      3.相对定位
      4.绝对定位
      5.固定定位
   
课后作业：
    1.预习定位 弄清楚上面5种定位各自的使用场景
    2.完成"课后作业.png"的布局效果
    3.复习今天所有知识点，整理完善思维导图
		 